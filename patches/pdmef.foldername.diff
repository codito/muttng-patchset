diff --git a/PATCHES b/PATCHES
index e69de29..c712bfa 100644
Index: mutt-1.5.18/PATCHES
===================================================================
--- mutt-1.5.18.orig/PATCHES	2008-05-18 23:45:17.000000000 +0200
+++ mutt-1.5.18/PATCHES	2008-05-18 23:45:23.000000000 +0200
@@ -1,3 +1,4 @@
+patch-1.5.13.pdmef.foldername.1
 patch-1.5.13.pdmef.atoi.2
 patch-1.5.13.muttng.xterm_title.2
 patch-1.5.4.lpr.signoff Lukas P. Ruf <lukas.ruf@lpr.ch>
Index: mutt-1.5.18/init.h
===================================================================
--- mutt-1.5.18.orig/init.h	2008-05-18 23:45:09.000000000 +0200
+++ mutt-1.5.18/init.h	2008-05-18 23:45:23.000000000 +0200
@@ -2990,6 +2990,7 @@
   ** set of printf()-like sequences:
   ** .pp
   ** .dl
+  ** .dt %B  .dd short mailbox name
   ** .dt %b  .dd number of mailboxes with new mail *
   ** .dt %d  .dd number of deleted messages *
   ** .dt %f  .dd the full pathname of the current mailbox
Index: mutt-1.5.18/status.c
===================================================================
--- mutt-1.5.18.orig/status.c	2008-05-18 23:44:30.000000000 +0200
+++ mutt-1.5.18/status.c	2008-05-18 23:45:23.000000000 +0200
@@ -42,7 +42,8 @@
 
 static void _menu_status_line (char *buf, size_t buflen, size_t col, MUTTMENU *menu, const char *p);
 
-/* %b = number of incoming folders with unread messages [option]
+/* %B = short mailbox name
+ * %b = number of incoming folders with unread messages [option]
  * %d = number of deleted messages [option]
  * %f = full mailbox path
  * %F = number of flagged messages [option]
@@ -70,6 +71,7 @@
   char fmt[SHORT_STRING], tmp[SHORT_STRING], *cp;
   int count, optional = (flags & M_FORMAT_OPTIONAL);
   MUTTMENU *menu = (MUTTMENU *) data;
+  char *p;
 
   *buf = 0;
   switch (op)
@@ -84,7 +86,31 @@
 	optional = 0;
       break;
 
-    case 'd':
+  case 'B':
+    snprintf (fmt, sizeof (fmt), "%%%ss", prefix);
+#ifdef USE_COMPRESSED
+    if (Context && Context->compressinfo && Context->realpath)
+    {
+      if ((p = strrchr (Context->realpath, '/')))
+	strfcpy (tmp, p + 1, sizeof (tmp));
+      else
+	strfcpy (tmp, Context->realpath, sizeof (tmp));
+    }
+    else
+#endif
+    if (Context && Context->path)
+    {
+      if ((p = strrchr (Context->path, '/')))
+	strfcpy (tmp, p + 1, sizeof (tmp));
+      else
+	strfcpy (tmp, Context->path, sizeof (tmp));
+    }
+    else
+      strfcpy (tmp, _("no mailbox"), sizeof (tmp));
+    snprintf (buf, buflen, fmt, tmp);
+    break;
+  
+  case 'd':
       if (!optional)
       {
 	snprintf (fmt, sizeof (fmt), "%%%sd", prefix);
